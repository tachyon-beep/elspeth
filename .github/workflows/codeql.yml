name: CodeQL Static Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Mondays at 02:00 UTC

permissions:
  contents: read

concurrency:
  group: codeql-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze (CodeQL)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@16140ae1a102900babc80a33c44059580f687047 # v4.30.9
        with:
          languages: python

      - name: Autobuild (Python)
        uses: github/codeql-action/autobuild@16140ae1a102900babc80a33c44059580f687047 # v4.30.9

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@16140ae1a102900babc80a33c44059580f687047 # v4.30.9
        with:
          category: '/language:python'

      - name: Summarize CodeQL alerts
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -e
          REPO="${{ github.repository }}"
          EVENT_NAME="${{ github.event_name }}"
          # Use a branch ref for PRs; API expects refs/heads/<branch>
          if [ "$EVENT_NAME" = "pull_request" ]; then
            REF_FILTER="refs/heads/${{ github.head_ref }}"
          else
            REF_FILTER="${{ github.ref }}"
          fi
          echo "## CodeQL Findings" >> "$GITHUB_STEP_SUMMARY"
          echo "- Ref: ${REF_FILTER}" >> "$GITHUB_STEP_SUMMARY"
          tmp=$(mktemp)
          # Retry a few times to account for eventual consistency after analysis
          for i in 1 2 3 4 5; do
            if gh api -H "Accept: application/vnd.github+json" \
              repos/${REPO}/code-scanning/alerts -F tool_name=CodeQL -F ref=${REF_FILTER} -F per_page=100 > "$tmp"; then
              break
            fi
            sleep 5
          done || true
          if [ ! -s "$tmp" ]; then
            # Fallback without ref filter (e.g., PR merge refs)
            if ! gh api -H "Accept: application/vnd.github+json" \
              repos/${REPO}/code-scanning/alerts -F tool_name=CodeQL -F per_page=100 > "$tmp"; then
              echo "Unable to fetch alerts (insufficient permissions or none present)." >> "$GITHUB_STEP_SUMMARY"
              exit 0
            fi
          fi
          total=$(jq 'length' "$tmp")
          open=$(jq '[.[] | select(.state=="open")] | length' "$tmp")
          echo "- Alerts: ${total} (open: ${open})" >> "$GITHUB_STEP_SUMMARY"
          for sev in error warning note; do
            cnt=$(jq --arg s "$sev" '[.[] | select(.state=="open" and .rule.severity==$s)] | length' "$tmp")
            echo "  - ${sev}: ${cnt}" >> "$GITHUB_STEP_SUMMARY"
          done
          echo "\nTop open alerts:" >> "$GITHUB_STEP_SUMMARY"
          jq -r '.[] | select(.state=="open") | "* [\(.rule.severity|ascii_upcase)] \(.rule.id) - \(.rule.description) â€” \(.most_recent_instance.location.path // "")"' "$tmp" | head -n 15 >> "$GITHUB_STEP_SUMMARY"
