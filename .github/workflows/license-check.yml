name: License Compliance Check

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    # Run weekly on Monday at 9am UTC
    - cron: '0 9 * * 1'

jobs:
  license-check:
    name: Verify License Compliance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements-dev.lock

      - name: Install dependencies (locked)
        run: |
          python -m pip install -r requirements-dev.lock --require-hashes

      - name: Generate license report
        run: |
          python -m piplicenses --format=markdown --order=license > licenses.md
          python -m piplicenses --format=json --with-urls --with-description > licenses.json

      - name: Check for forbidden licenses
        run: |
          # Fail if GPL, LGPL, or AGPL licenses found
          if python -m piplicenses --format=json | grep -iE '"License".*"(L?GPL|AGPL)"'; then
            echo "ERROR: Copyleft license detected!"
            echo "Forbidden licenses: GPL, LGPL, AGPL"
            echo "Please review licenses.json for details"
            exit 1
          fi
          echo "✅ No forbidden licenses detected"

      - name: Upload license reports
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: license-reports
          path: |
            licenses.md
            licenses.json
          retention-days: 90

      - name: Check for unknown licenses
        run: |
          # Warn if UNKNOWN licenses found (don't fail, but notify)
          if python -m piplicenses --format=json | grep -i '"License".*"UNKNOWN"'; then
            echo "⚠️  WARNING: Packages with unknown licenses detected"
            echo "Please review licenses.json and update package metadata"
          fi
