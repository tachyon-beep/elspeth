name: Lint, Tests & Sample Suite

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  secrets-scan:
    name: Secret Scan (gitleaks)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload gitleaks report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: results.sarif

  lint-and-test:
    name: Lint, Tests, Supply-Chain Gates
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: secrets-scan
    permissions:
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies (locked)
        run: |
          python -m pip install --upgrade pip
          python -m pip install pip-tools
          python -m piptools sync requirements-dev.lock
          python -m pip install -e . --no-deps

      - name: Lint (ruff + mypy)
        run: python -m ruff check src tests && python -m mypy src

      - name: Security static analysis (bandit)
        run: |
          python -m pip install bandit
          # Fail build on HIGH severity and HIGH confidence findings
          bandit -q -r src --severity-level high --confidence-level high -f json -o bandit.json
      - name: Upload bandit report (JSON)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bandit-json
          path: bandit.json

      - name: Semgrep scan (CLI SARIF, curated)
        run: |
          # Curated, low-noise ruleset, block only ERROR-severity findings
          python -m semgrep --config p/ci --severity ERROR --sarif --output semgrep.sarif
      - name: Upload semgrep report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif
          path: semgrep.sarif
      - name: Upload semgrep SARIF to code scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
          category: semgrep

      - name: Unit tests with coverage
        run: python -m pytest -m "not slow" --maxfail=1 --disable-warnings

      - name: Generate SBOM
        run: python -m cyclonedx_py requirements requirements.lock --pyproject pyproject.toml --output-file sbom.json --output-format JSON --output-reproducible

      - name: Upload SBOM artefact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-json
          path: sbom.json

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: Run pip-audit
        run: pip-audit -r requirements.lock --require-hashes --format json --output pip-audit.json

      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: pip-audit.json

  sample-suite:
    name: Sample Suite Smoke Test
    runs-on: ubuntu-latest
    needs: lint-and-test
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies (locked)
        run: |
          python -m pip install --upgrade pip
          python -m pip install pip-tools
          python -m piptools sync requirements-dev.lock
          python -m pip install -e . --no-deps

      - name: Run sample suite smoke test
        run: |
          python -m elspeth.cli \
            --settings config/sample_suite/settings.yaml \
            --suite-root config/sample_suite \
            --head 0 \
            --live-outputs
