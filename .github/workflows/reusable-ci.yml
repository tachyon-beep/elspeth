name: Reusable CI (Lint, Types, Tests)

on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: "3.12"

permissions:
  contents: read

jobs:
  lint_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ inputs.python-version }}
          cache: "pip"
          cache-dependency-path: |
            requirements-dev.lock

      - name: Install dependencies (locked)
        run: |
          python -m pip install -r requirements-dev.lock --require-hashes
          python -m pip install -e . --no-deps --no-index --no-build-isolation

      - name: Restore mypy cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: .mypy_cache
          key: mypy-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('pyproject.toml', 'src/**/*.py') }}
          restore-keys: |
            mypy-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-

      - name: Lint (ruff + mypy)
        run: |
          python -m ruff check src tests
          python -m mypy src

      # Ruff gates both docstrings (D) and security (S) via pyproject config

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@7b1c307e0dcbda6122208f10795a713336a9b35a
        with:
          toolchain: stable

      - name: Build Rust sidecar daemon
        working-directory: sidecar
        run: cargo build --release

      - name: Setup sidecar daemon for integration tests
        run: |
          chmod +x sidecar/target/release/elspeth-sidecar-daemon
          mkdir -p /tmp/sidecar-test

          # Generate session key (32 raw bytes, not hex-encoded)
          openssl rand 32 > /tmp/sidecar-test/session.key

          # Write minimal config
          cat > /tmp/sidecar-test/sidecar.toml <<EOF
          mode = "sidecar"
          socket_path = "/tmp/sidecar-test/auth.sock"
          session_key_path = "/tmp/sidecar-test/session.key"
          appuser_uid = $(id -u)
          grant_ttl_secs = 60
          max_request_size_bytes = 1048576
          log_level = "info"
          EOF

          # Start daemon in background
          sidecar/target/release/elspeth-sidecar-daemon /tmp/sidecar-test/sidecar.toml &
          echo $! > /tmp/sidecar-test/daemon.pid

          # Wait for daemon initialization
          sleep 2

          # Verify daemon is running
          if kill -0 $(cat /tmp/sidecar-test/daemon.pid) 2>/dev/null; then
            echo "✅ Sidecar daemon started (PID: $(cat /tmp/sidecar-test/daemon.pid))"
          else
            echo "❌ Failed to start sidecar daemon"
            exit 1
          fi

      - name: Unit tests with coverage (including integration tests)
        env:
          ELSPETH_RUN_INTEGRATION_TESTS: "1"
          ELSPETH_SIDECAR_MODE: "sidecar"
          ELSPETH_SIDECAR_SOCKET: "/tmp/sidecar-test/auth.sock"
          ELSPETH_SIDECAR_SESSION_KEY: "/tmp/sidecar-test/session.key"
        run: |
          python -m pytest -m "not slow" --maxfail=1 --disable-warnings --cov-fail-under=80 --cov-report=xml:coverage.xml

      - name: Cleanup sidecar daemon
        if: always()
        run: |
          if [ -f /tmp/sidecar-test/daemon.pid ]; then
            PID=$(cat /tmp/sidecar-test/daemon.pid)
            if kill -0 $PID 2>/dev/null; then
              kill $PID
              echo "✅ Stopped sidecar daemon (PID: $PID)"
            fi
          fi
          rm -rf /tmp/sidecar-test

      - name: Enforce per-file coverage (src/elspeth)
        run: |
          # Exempt files with reduced coverage thresholds (will improve as features mature):
          # - proxy.py (61%): Mostly stub implementations awaiting Task 3.0 RPC infrastructure
          # - worker_process.py (55%): Main event loop (worker_main) requires subprocess integration testing
          python scripts/check_coverage_thresholds.py \
            --xml coverage.xml \
            --all 0.80 \
            --include-prefix src/elspeth/ \
            --file src/elspeth/core/security/proxy.py:0.61 \
            --file src/elspeth/orchestrator/worker_process.py:0.55

      - name: Upload coverage xml
        if: always()
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: coverage-xml
          path: coverage.xml
          retention-days: 7
